# -*- mode: Perl -*-
# /=====================================================================\ #
# |  APEX_format                                                        | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Timothy Prescott <timothy.prescott.und@gmail.com>                   | #
# | License:     Creative Commons Attribution 4.0 Unported License      | #
# |    http://creativecommons.org/licenses/by/4.0/                      | #
# \=====================================================================/ #
use strict;
use warnings;
use LaTeXML::Package;
use Data::Dumper;
use Scalar::Util qw(looks_like_number);

# fix some bugs
RawTeX('\setlength{\marginparwidth}{150pt}');
RawTeX('\setlength{\baselineskip}{12pt}');
RawTeX('\newlength{\defaultaddspace}');
RawTeX('\setlength{\defaultaddspace}{5pt}');

DefMacro('\includecodegraphics{}','\includegraphics{#1}');

RequirePackage('ifluatex');

#DefMacro('\exvideo Verbatim','\bigbreak\noindent#1\bigbreak');

# same definition, but we need "Verbatim" to get it to work with _
DefMacro('\youtubeVideo Verbatim {}','\genVideo{#1}{https://youtu.be/#1}{#2}');

DefMacro('\genVideo [] Verbatim Verbatim {}',
	 '\\noindent Watch the video:\\\\'.
	 '\\href{#3#1}{#4 from \\nolinkurl{#3}}\\\\'.
	 '\\embedVideo{https://www.youtube.com/embed/#2?rel=0}\\\\');

DefMacro('\embedVideo Verbatim','\iframe{#1}{560}{355}');
DefConstructor('\iframe Verbatim {}{}',
	       '<ltx:rawhtml>'.
	       '<xhtml:iframe width="560" height="355" '.
	       'src="#1" frameborder="0" scrolling="no" seamless="seamless" '.
	       'allowfullscreen="allowfullscreen" '.
	       'webkitallowfullscreen="webkitallowfullscreen" '.
	       'mozallowfullscreen="mozallowfullscreen">'.
	       '</xhtml:iframe></ltx:rawhtml>');

#DefMacro('\coloredbox{}{}{}','#3'); # causes problems
DefMacro('\coloredbox{}{}'); # avoids problems?
# exhibit problem:
# \parbox{\linewidth} {\href{https://youtu.be/2CsQ_l1S2_Y}{has underscores}}

DefMacro('\lxIncludeJavascriptFile{}',
	 '\AtBeginDocument{\lx@include@file{javascript}{#1}}');
DefMacro('\lxIncludeCssFile{}',
	 '\AtBeginDocument{\lx@include@file{css}{#1}}');

DefConstructor('\lx@include@file{}{}',
	       '<ltx:resource type="text/#1" src="#2" />');

DefConstructor('\makeStyles{}{}',
	       '<ltx:resource type="text/css">'.
	       '#selector #styles'.
	       '</ltx:resource>',
	       properties => sub {
		   return (
		       selector => '.ltx_theorem_'.UnTeX($_[1]).'Env',
		       styles => &boxStyles(UnTeX($_[2]))
		       );
	       }
    );

sub boxStyles {
    my $hue = shift;
    my $start = "hsl($hue,100%,97%)";
    my ($border,$middle,$stop);
    if ( $hue eq '60' ) {
	$border = "hsl($hue,90%,68%)";
	$middle = "hsl($hue,91%,90%)";
	$stop  = "hsl($hue,82%,83%)";
    } else {
	$border = "hsl($hue,18%,58%)";
	$middle = "hsl($hue,72%,92%)";
	$stop  = "hsl($hue,43%,86%)";
    }
    return "{
      padding: 1ex 1em;
      text-indent:0;
      border-width: 1px;
      border-style: solid;
      border-color: $border;
      background-color: $middle; /* old browsers */
      background-image: -moz-linear-gradient(top,$start 0%,$stop); /* FF 3.6+ */
      background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(100%,$stop)); /* Chrome, Safari 4+ */
      background-image: -webkit-linear-gradient(top,$start 0%,$stop 100%); /* Chrome 10+, Safari 5.1+ */
      background-image: -o-linear-gradient(top,$start 0%,$stop 100%); /* Opera 11.10+ */
      background-image: -ms-linear-gradient(top,$start 0%,$stop 100%); /* IE 10+ */
      background-image: linear-gradient(to bottom,$start 0%,$stop 100%); /* W3C */
    }";
}

DefMacro('\examplestarred {}{}{}','\begin{exampleEnv}[#2]\label{#1}
#3
\end{exampleEnv}');

DefMacro('\apexchapter []{}{}',
	 #'\setboolean{chapter_already_has_exercises}{false}'
	 '\chapter{#2}\label{#3}'
	 .'\ifx.#1.\else\addtocounter{section}{-1}\input{#1}\fi'
	 .'\section*{Chapter Introduction}');


DefMacro('\myincludegraphicsthree{}{} Semiverbatim',
	 '\myincludegraphics[#2]{#3_3D}');
DefMacro('\myincludeasythree{}{} Semiverbatim','\myincludegraphics[#2]{#3}');

DefMacro('\vv {}','\vec #1');

DefMacro('\flushinner{}','{#1}');
DefMacro('\flushouter{}','{#1}');
DefMacro('\flushinnerequ{}','{#1}');
DefMacro('\flushouterequ{}','{#1}');

# some Macros we do need

DefMacroI('\textcent',undef,"\x{00A2}");
#DefMacro('\lvert','\vert');
#DefMacro('\rvert','\vert');
#DefMacro('\lVert','\Vert');
#DefMacro('\rVert','\Vert');
DefMacro('\lxenumerate{}','\begin{enumerate}');
DefMacro('\psBill'); # todo

# some macros we don't need
DefMacro('\drawexampleline');
DefMacro('\eoehere');
DefMacro('\testmargintop');
DefMacro('\testmarginbottom');


# have to keep it here because .sty has \noexpand, which gets written
DefMacro('\writeToAnsFile {}',sub {
    #    print STDERR Dumper($_[1]);
    (Tokenize('\immediate\write\answrite{\answersForSection{'
	      . CounterValue('chapter')->toString . '}{'
	      . CounterValue('section')->toString . '}{'),
     $_[1],
     Tokenize('}}'));});

DefPrimitive('\showans Number',sub {
    my ($stomach,$port) = @_;
    $port = ToString($port);
    my $filename = LookupValue('output_file:' . $port);
    my $handle   = $filename . '_contents';
    my $contents = LookupValue($handle);
    print STDERR "Current $filename contents:\n$contents\n\n";
    return;
	     });

1;
